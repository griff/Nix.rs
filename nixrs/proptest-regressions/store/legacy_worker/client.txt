# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 5598b3f6a7e3f1d28360b84133d63d3838d1ba6d368e1e06ac0c71c92007d9cc # shrinks to drv_path = StorePath { hash: 00000000000000000000000000000000, name: StorePathName("-.drv") }, mut drv = BasicDerivation { outputs: {}, input_srcs: {}, platform: "", builder: "A/?", arguments: [], env: [], name: "" }, mut settings = BuildSettings { keep_failed: true, keep_going: false, try_fallback: false, max_build_jobs: 1, verbose_build: true, build_cores: 0, verbosity: Info, keep_log: false, use_substitutes: false, max_silent_time: 0ns, build_timeout: 0ns, max_log_size: 0, run_diff_hook: true, unknown: {} }, result = BuildResult { status: Unsupported(13), error_msg: "", times_built: 0, is_non_deterministic: false, built_outputs: {}, start_time: SystemTime { tv_sec: 0, tv_nsec: 0 }, stop_time: SystemTime { tv_sec: 0, tv_nsec: 0 } }
cc 5ede47739aa306d2abff7ed42882b21edfd7b77b99af84ea6f15bdf825e2d870 # shrinks to drv_path = StorePath { hash: 00000000000000000000000000000000, name: StorePathName("a.drv") }, mut drv = BasicDerivation { outputs: {"A": Impure { method: Text, hash_type: MD5 }}, input_srcs: {}, platform: "", builder: "./A", arguments: [], env: [], name: "" }, mut settings = BuildSettings { keep_failed: false, keep_going: false, try_fallback: false, max_build_jobs: 1, verbose_build: true, build_cores: 0, verbosity: Info, keep_log: false, use_substitutes: false, max_silent_time: 0ns, build_timeout: 0ns, max_log_size: 0, run_diff_hook: true, unknown: {} }, result = BuildResult { status: Unsupported(13), error_msg: "", times_built: 0, is_non_deterministic: false, built_outputs: {}, start_time: SystemTime { tv_sec: 0, tv_nsec: 0 }, stop_time: SystemTime { tv_sec: 0, tv_nsec: 0 } }
